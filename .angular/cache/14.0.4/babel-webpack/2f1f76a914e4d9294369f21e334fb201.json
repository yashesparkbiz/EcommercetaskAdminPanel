{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/R5/Desktop/EcommerceBackup/Angular/EcommercetaskAdminPanel/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/_services/users.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction UsersComponent_tbody_31_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 50);\n    i0.ɵɵlistener(\"click\", function UsersComponent_tbody_31_tr_1_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const user_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.setuserid(user_r2.id));\n    });\n    i0.ɵɵelement(13, \"i\", 51);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 50);\n    i0.ɵɵlistener(\"click\", function UsersComponent_tbody_31_tr_1_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const user_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.deleteuser(user_r2.id));\n    });\n    i0.ɵɵelement(15, \"i\", 52);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const user_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", user_r2.id, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", user_r2.userName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", user_r2.email, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", user_r2.age, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", user_r2.gender, \"\");\n  }\n}\n\nfunction UsersComponent_tbody_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tbody\");\n    i0.ɵɵtemplate(1, UsersComponent_tbody_31_tr_1_Template, 16, 5, \"tr\", 49);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx_r0.userdata));\n  }\n}\n\nexport class UsersComponent {\n  constructor(userservice) {\n    this.userservice = userservice;\n    this.errorMessage1 = '';\n    this.Message1 = '';\n  }\n\n  ngOnInit() {\n    this.updateUserForm = new FormGroup({\n      userName: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      phoneNumber: new FormControl(''),\n      gender: new FormControl(''),\n      age: new FormControl(''),\n      password: new FormControl('', [Validators.required]),\n      confirmPassword: new FormControl('')\n    });\n    this.getallUsers();\n  }\n\n  getallUsers() {\n    this.userdata = this.userservice.getall();\n  }\n\n  setuserid(id) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.userservice.getbyid(id).subscribe(res => {\n        _this.user = res;\n\n        _this.callmodel(res);\n      });\n    })();\n  }\n\n  callmodel(data) {\n    alert(JSON.stringify(data));\n    this.updateUserForm.controls[\"userName\"].setValue(data.userName);\n    this.updateUserForm.controls[\"email\"].setValue(data.email);\n    this.updateUserForm.controls[\"phoneNumber\"].setValue(data.phoneNumber);\n    this.updateUserForm.controls[\"gender\"].setValue(data.gender);\n    this.updateUserForm.controls[\"age\"].setValue(data.age);\n    this.updateUserForm.controls[\"password\"].setValue(data.password);\n    this.updateUserForm.controls[\"confirmPassword\"].setValue(data.confirmPassword);\n    document.getElementById('openModalButton')?.click();\n  }\n\n  deleteuser(id) {\n    var check = confirm('Are you sure you want to delete User?');\n\n    if (check == true) {\n      this.userservice.delete(id).subscribe(res => {\n        if (res == true) {\n          alert(\"SubCategory deleted successfully;\");\n          this.ngOnInit();\n        }\n      });\n    }\n  }\n\n  clearmessages() {\n    this.errorMessage1 = '';\n    this.Message1 = '';\n  }\n\n  editUser(data) {\n    if (data.userName != \"\" && data.email != \"\" && data.phoneNumber != \"\" && data.gender != \"\" && data.age > 0 && data.password != \"\" && data.confirmPassword != \"\") {\n      var userdata = {\n        id: Number(this.user.id),\n        age: data.age,\n        gender: data.gender,\n        email: data.email,\n        phoneNumber: data.phoneNumber,\n        userName: data.userName,\n        password: data.password,\n        confirmPassword: data.confirmPassword,\n        role: \"\"\n      };\n      this.userservice.Update(userdata).subscribe(res => {\n        alert(res);\n        this.Message1 += \"- data updated successfully\";\n        this.errorMessage1 = \"\";\n        this.ngOnInit();\n      });\n    }\n  }\n\n}\n\nUsersComponent.ɵfac = function UsersComponent_Factory(t) {\n  return new (t || UsersComponent)(i0.ɵɵdirectiveInject(i1.UsersService));\n};\n\nUsersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsersComponent,\n  selectors: [[\"app-users\"]],\n  decls: 94,\n  vars: 5,\n  consts: [[1, \"container-fluid\"], [1, \"card\", \"shadow\", \"border-0\", \"mb-7\"], [1, \"card-header\", \"row\"], [1, \"mb-0\", \"col-md-2\"], [1, \"col-md-2\"], [\"id\", \"ddlrole\", 1, \"form-control\"], [\"selected\", \"\", \"value\", \"0\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\", \"table-nowrap\"], [1, \"thead-light\"], [\"scope\", \"col\"], [4, \"ngIf\"], [1, \"card-footer\", \"border-0\", \"py-5\"], [\"id\", \"openModalButton\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#updateUserModal\", 3, \"hidden\"], [\"id\", \"updateUserModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"], [1, \"modal-body\"], [1, \"container\"], [1, \"text-danger\"], [1, \"text-success\"], [\"autocomplete\", \"off\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\", \"row\"], [\"for\", \"firstName\", 1, \"col-form-label\", \"col-md-4\"], [1, \"col-md-8\"], [\"type\", \"text\", \"id\", \"userName\", \"formControlName\", \"userName\", 1, \"form-control\"], [\"for\", \"email\", 1, \"col-form-label\", \"col-md-4\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"phoneNumber\", 1, \"col-form-label\", \"col-md-4\"], [\"type\", \"text\", \"id\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", 1, \"form-control\"], [\"for\", \"age\", 1, \"col-form-label\", \"col-md-4\"], [\"type\", \"number\", \"id\", \"age\", \"formControlName\", \"age\", 1, \"form-control\"], [\"for\", \"gender\", 1, \"col-form-label\", \"col-md-4\"], [\"type\", \"radio\", \"name\", \"gender\", \"value\", \"male\", \"formControlName\", \"gender\"], [\"type\", \"radio\", \"name\", \"gender\", \"value\", \"female\", \"formControlName\", \"gender\"], [\"type\", \"radio\", \"name\", \"gender\", \"value\", \"other\", \"formControlName\", \"gender\"], [\"for\", \"password\", 1, \"col-form-label\", \"col-md-4\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"col-md-5\"], [\"for\", \"confirmPassword\", 1, \"col-form-label\", \"col-md-4\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", 1, \"form-control\"], [1, \"col-md-1\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-square\", \"btn-neutral\", \"text-danger-hover\", 3, \"click\"], [1, \"bi\", \"bi-pencil-square\"], [1, \"bi\", \"bi-trash\"]],\n  template: function UsersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\", 3);\n      i0.ɵɵtext(4, \"Users List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"select\", 5)(7, \"option\", 6);\n      i0.ɵɵtext(8, \"All\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"option\", 7);\n      i0.ɵɵtext(10, \"Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"option\", 8);\n      i0.ɵɵtext(12, \"Seller\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"option\", 9);\n      i0.ɵɵtext(14, \"Admin\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(15, \"div\", 10)(16, \"table\", 11)(17, \"thead\", 12)(18, \"tr\")(19, \"th\", 13);\n      i0.ɵɵtext(20, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\", 13);\n      i0.ɵɵtext(22, \"User Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\", 13);\n      i0.ɵɵtext(24, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\", 13);\n      i0.ɵɵtext(26, \"Age\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"th\", 13);\n      i0.ɵɵtext(28, \"Gender\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"th\", 13);\n      i0.ɵɵtext(30, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(31, UsersComponent_tbody_31_Template, 3, 3, \"tbody\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(32, \"div\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(33, \"button\", 16);\n      i0.ɵɵelementStart(34, \"div\", 17)(35, \"div\", 18)(36, \"div\", 19)(37, \"div\", 20)(38, \"h5\", 21);\n      i0.ɵɵtext(39, \"Update User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"button\", 22);\n      i0.ɵɵlistener(\"click\", function UsersComponent_Template_button_click_40_listener() {\n        return ctx.clearmessages();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(41, \"div\", 23)(42, \"div\", 24)(43, \"p\", 25);\n      i0.ɵɵtext(44);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"p\", 26);\n      i0.ɵɵtext(46);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"form\", 27);\n      i0.ɵɵlistener(\"ngSubmit\", function UsersComponent_Template_form_ngSubmit_47_listener() {\n        return ctx.editUser(ctx.updateUserForm.value);\n      });\n      i0.ɵɵelementStart(48, \"div\", 28)(49, \"label\", 29);\n      i0.ɵɵtext(50, \"UserName:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"div\", 30);\n      i0.ɵɵelement(52, \"input\", 31);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(53, \"div\", 28)(54, \"label\", 32);\n      i0.ɵɵtext(55, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"div\", 30);\n      i0.ɵɵelement(57, \"input\", 33);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(58, \"div\", 28)(59, \"label\", 34);\n      i0.ɵɵtext(60, \"PhoneNumber:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"div\", 30);\n      i0.ɵɵelement(62, \"input\", 35);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(63, \"div\", 28)(64, \"label\", 36);\n      i0.ɵɵtext(65, \"Age:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(66, \"div\", 30);\n      i0.ɵɵelement(67, \"input\", 37);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(68, \"div\", 28)(69, \"label\", 38);\n      i0.ɵɵtext(70, \"Gender:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(71, \"div\", 30);\n      i0.ɵɵelement(72, \"input\", 39);\n      i0.ɵɵtext(73, \" Male \\u00A0\\u00A0 \");\n      i0.ɵɵelement(74, \"input\", 40);\n      i0.ɵɵtext(75, \" Female \\u00A0\\u00A0 \");\n      i0.ɵɵelement(76, \"input\", 41);\n      i0.ɵɵtext(77, \" Other \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(78, \"div\", 28)(79, \"label\", 42);\n      i0.ɵɵtext(80, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(81, \"div\", 30);\n      i0.ɵɵelement(82, \"input\", 43);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(83, \"div\", 44);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(84, \"div\", 28)(85, \"label\", 45);\n      i0.ɵɵtext(86, \"Confirm Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(87, \"div\", 30);\n      i0.ɵɵelement(88, \"input\", 46);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(89, \"br\");\n      i0.ɵɵelementStart(90, \"div\", 28)(91, \"div\", 47)(92, \"button\", 48);\n      i0.ɵɵtext(93, \"Update\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(31);\n      i0.ɵɵproperty(\"ngIf\", ctx.userdata);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", true);\n      i0.ɵɵadvance(11);\n      i0.ɵɵtextInterpolate(ctx.errorMessage1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.Message1);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateUserForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.NgForOf, i3.NgIf, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2Vycy5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","UsersComponent","constructor","userservice","ngOnInit","updateUserForm","userName","required","email","phoneNumber","gender","age","password","confirmPassword","getallUsers","userdata","getall","setuserid","id","getbyid","subscribe","res","user","callmodel","data","alert","JSON","stringify","controls","setValue","document","getElementById","click","deleteuser","check","confirm","delete","clearmessages","errorMessage1","Message1","editUser","Number","role","Update","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\R5\\Desktop\\EcommerceBackup\\Angular\\EcommercetaskAdminPanel\\src\\app\\_components\\users\\users.component.ts","C:\\Users\\R5\\Desktop\\EcommerceBackup\\Angular\\EcommercetaskAdminPanel\\src\\app\\_components\\users\\users.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { UsersModel } from 'src/app/_interfaces/user-model';\nimport { User } from 'src/app/_models/user';\nimport { UsersService } from 'src/app/_services/users.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  userdata!: Observable<User[]>;\n  user!: User;\n  errorMessage1: string = '';\n  Message1: string = '';\n  updateUserForm!: FormGroup;\n\n  constructor(private userservice: UsersService) { }\n\n  ngOnInit(): void {\n    this.updateUserForm = new FormGroup({\n      userName: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      phoneNumber: new FormControl(''),\n      gender: new FormControl(''),\n      age: new FormControl(''),\n      password: new FormControl('', [Validators.required]),\n      confirmPassword: new FormControl('')\n    });\n\n    this.getallUsers();\n  }\n\n  getallUsers() {\n    this.userdata = this.userservice.getall();\n  }\n\n  async setuserid(id: number) {\n    await this.userservice.getbyid(id).subscribe(res => {\n      this.user = res;\n      this.callmodel(res);\n    });\n  }\n\n  callmodel(data: User) {\n    alert(JSON.stringify(data));\n    this.updateUserForm.controls[\"userName\"].setValue(data.userName);\n    this.updateUserForm.controls[\"email\"].setValue(data.email);\n    this.updateUserForm.controls[\"phoneNumber\"].setValue(data.phoneNumber);\n    this.updateUserForm.controls[\"gender\"].setValue(data.gender);\n    this.updateUserForm.controls[\"age\"].setValue(data.age);\n    this.updateUserForm.controls[\"password\"].setValue(data.password);\n    this.updateUserForm.controls[\"confirmPassword\"].setValue(data.confirmPassword);\n    document.getElementById('openModalButton')?.click();\n  }\n\n  deleteuser(id: number) {\n    var check = confirm('Are you sure you want to delete User?');\n    if (check == true) {\n      this.userservice.delete(id).subscribe(res => {\n        if (res == true) {\n          alert(\"SubCategory deleted successfully;\");\n          this.ngOnInit();\n        }\n      });\n    }\n  }\n\n  clearmessages() {\n    this.errorMessage1 = '';\n    this.Message1 = '';\n  }\n\n  editUser(data: any) {\n    if (data.userName != \"\" && data.email != \"\" && data.phoneNumber != \"\" && data.gender != \"\" && data.age > 0 && data.password != \"\" && data.confirmPassword != \"\") {\n      var userdata: User = {\n        id: (Number)(this.user.id),\n        age: data.age,\n        gender: data.gender,\n        email: data.email,\n        phoneNumber: data.phoneNumber,\n        userName: data.userName,\n        password: data.password,\n        confirmPassword: data.confirmPassword,\n        role: \"\"\n      }\n      this.userservice.Update(userdata).subscribe(res => {\n        alert(res);\n        this.Message1 += \"- data updated successfully\";\n        this.errorMessage1 = \"\";\n        this.ngOnInit();\n      })\n    }\n  }\n}","<div class=\"container-fluid\">\n    <div class=\"card shadow border-0 mb-7\">\n        <div class=\"card-header row\">\n            <h5 class=\"mb-0 col-md-2\">Users List</h5>\n            <!-- <div class=\"col-md-2\"><a href=\"#\" class=\"btn d-inline-flex btn-sm btn-primary mx-1\" data-bs-toggle=\"modal\"\n                    data-bs-target=\"#UserModal\"> <span class=\" pe-2\"> <i class=\"bi bi-plus\"></i> </span>\n                    <span>Add</span> </a>\n            </div> -->\n            <div class=\"col-md-2\">\n                <select id=\"ddlrole\" class=\"form-control\" >\n                    <option selected value=\"0\">All</option>\n                    <option value=\"1\">Customer</option>\n                    <option value=\"2\">Seller</option>\n                    <option value=\"3\">Admin</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"table-responsive\">\n            <table class=\"table table-hover table-nowrap\">\n                <thead class=\"thead-light\">\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">User Name</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Age</th>\n                        <th scope=\"col\">Gender</th>\n                        <th scope=\"col\">Action</th>\n                    </tr>\n                </thead>\n                <tbody *ngIf=\"userdata\">\n                    <tr *ngFor=\"let user of userdata | async\">\n                        <td> {{user.id}} </td>\n                        <td> {{user.userName}} </td>\n                        <td> {{user.email}}</td>\n                        <td> {{user.age}}</td>\n                        <td> {{user.gender}}</td>\n                        <td> \n                            <button type=\"button\" class=\"btn btn-sm btn-square btn-neutral text-danger-hover\"  (click)=\"setuserid(user.id)\"><i class=\"bi bi-pencil-square\"></i></button> \n                            <button type=\"button\" class=\"btn btn-sm btn-square btn-neutral text-danger-hover\" (click)=\"deleteuser(user.id)\">\n                                <i class=\"bi bi-trash\"></i>\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"card-footer border-0 py-5\"> </div>\n        <!-- <span class=\"text-muted text-sm\">Showing 10 items out of 250 results found</span> -->\n    </div>\n</div>\n<!-- edit user-->\n<button id=\"openModalButton\" data-bs-toggle=\"modal\" data-bs-target=\"#updateUserModal\" [hidden]=\"true\"></button>\n<div class=\"modal fade\" id=\"updateUserModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Update User</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" (click)=\"clearmessages()\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"container\">\n                    <p class=\"text-danger\">{{errorMessage1}}</p>\n                    <p class=\"text-success\">{{Message1}}</p>\n                    <form [formGroup]=\"updateUserForm\" autocomplete=\"off\" novalidate (ngSubmit)=\"editUser(updateUserForm.value)\">\n                        <div class=\"mb-3 row\">\n                            <label for=\"firstName\" class=\"col-form-label col-md-4\">UserName:</label>\n                            <div class=\"col-md-8\">\n                                <input type=\"text\" id=\"userName\" formControlName=\"userName\" class=\"form-control\" />\n                            </div>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"email\" class=\"col-form-label col-md-4\">Email:</label>\n                            <div class=\"col-md-8\">\n                                <input type=\"email\" id=\"email\" formControlName=\"email\" class=\"form-control\" />\n                            </div>\n                            <!-- <div class=\"col-md-5\">\n                                <em *ngIf=\"validateControl('email') && hasError('email', 'email')\">Please provide a valid\n                                    email</em>\n                                <em *ngIf=\"validateControl('email') && hasError('email', 'required')\">Email is required</em>\n                            </div> -->\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"phoneNumber\" class=\"col-form-label col-md-4\">PhoneNumber:</label>\n                            <div class=\"col-md-8\">\n                                <input type=\"text\" id=\"phoneNumber\" formControlName=\"phoneNumber\" class=\"form-control\" />\n                            </div>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"age\" class=\"col-form-label col-md-4\">Age:</label>\n                            <div class=\"col-md-8\">\n                                <input type=\"number\" id=\"age\" formControlName=\"age\" class=\"form-control\" />\n                            </div>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"gender\" class=\"col-form-label col-md-4\">Gender:</label>\n                            <div class=\"col-md-8\">\n                                <input type=\"radio\" name=\"gender\" value=\"male\" formControlName=\"gender\"> Male &nbsp;&nbsp;\n                                <input type=\"radio\" name=\"gender\" value=\"female\" formControlName=\"gender\"> Female &nbsp;&nbsp;\n                                <input type=\"radio\" name=\"gender\" value=\"other\" formControlName=\"gender\"> Other\n                            </div>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"password\" class=\"col-form-label col-md-4\">Password:</label>\n                            <div class=\"col-md-8\">\n                                <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\" />\n                            </div>\n                            <div class=\"col-md-5\">\n                                <!-- <em *ngIf=\"validateControl('password') && hasError('password', 'required')\">Password is required</em> -->\n                            </div>\n                        </div>\n                        <div class=\"mb-3 row\">\n                            <label for=\"confirmPassword\" class=\"col-form-label col-md-4\">Confirm Password:</label>\n                            <div class=\"col-md-8\">\n                                <input type=\"password\" id=\"confirmPassword\" formControlName=\"confirmPassword\" class=\"form-control\" />\n                            </div>\n                        </div>\n                        <br>\n                        <div class=\"mb-3 row\">\n                            <div class=\"col-md-1\">\n                                <button type=\"submit\" class=\"btn btn-info\" >Update</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module"}